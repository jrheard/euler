; Each new term in the Fibonacci sequence is generated by adding the previous two terms.
; By starting with 1 and 2, the first 10 terms will be:
; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
; By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

; my first clojure fibonacci; slow as balls
(defn fib'
  [term]
  (cond
    (< term 2) 1
    :else (+ (fib (- term 1)) (fib (- term 2)))))

; lazy fibonacci lifted straight from http://en.wikibooks.org/wiki/Clojure_Programming/Examples/Lazy_Fibonacci
(def fib-seq
  ((fn rfib [a b]
     (lazy-seq (cons a (rfib b (+ a b)))))
  0 1))

(println
  (take-while #(<= % 4000000) fib-seq))
