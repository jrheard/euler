(defun routes-through-a-grid (x y)
  (let ((choices 0))
	   (labels ((f (xx yy direction)
				  (let ((had-a-choice (and (not (eq xx x)) (not (eq yy y)))))
						(when (not (eq xx x))
							  (when (and had-a-choice (not (eq direction 'x))) (incf choices))
							  (f (1+ xx) yy 'x))
						(when (not (eq yy y))
							  (when (and had-a-choice (not (eq direction 'y))) (incf choices))
							  (f xx (1+ yy) 'y)))))
			   (f 0 0 nil))
	   choices))

(time (print (routes-through-a-grid 20 20)))
